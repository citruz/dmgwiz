name: Build and Test
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta, nightly, macos, win32, win64]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: nightly
            os: ubuntu-latest
            rust: nightly
          - build: macos
            os: macos-latest
            rust: stable
          - build: win32
            os: windows-2016
            rust: stable-i686-msvc
          - build: win64
            os: windows-latest
            rust: stable-x86_64-msvc
    steps:
    - uses: actions/checkout@main
      with:
        submodules: true
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      shell: bash
    - name: Use strawberry perl
      if: startsWith(matrix.os, 'windows')
      run: echo ::set-env name=OPENSSL_SRC_PERL::C:/Strawberry/perl/bin/perl
      shell: bash
    - name: Test Perl (Windows)
      run: |
        Get-Command perl
        perl -v
      if: startsWith(matrix.os, 'windows')
    - name: Run Cargo Test
      run: cargo test
    - name: Build release binary
      run: cargo build --release
    - name: Delete intermediate files
      run: rm -rf ./target/release/{build,deps,incremental}
      shell: bash
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dmgwiz_release_${{ matrix.build }}
        path: ./target/release/

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - run: cargo fmt -- --check
